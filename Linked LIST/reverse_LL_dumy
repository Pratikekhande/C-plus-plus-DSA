// recurrsion code :


void reverse(LinkedListNode<int> *head,LinkedListNode<int> *curr,LinkedListNode<int> *prev){
    // base case
    
    if(curr == NULL){
        curr = prev;
        return ;
    }
    
     LinkedListNode<int>* forward = curr->next;
    reverse(head,forward,curr);
    curr->next = prev;
    
}


// iterative approach; 


LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) 
{
    LinkedListNode<int>* prev =NULL;
    LinkedListNode<int>* curr = head;
    reverse(head, curr, prev);
    return head;
    
    // Write your code here
    /*
    if(head == NULL || head->next == NULL){
        return head;
        
    }
    
    LinkedListNode<int>* prev =NULL;
    LinkedListNode<int>* curr = head;
    LinkedListNode<int>* forward = NULL;
    
    while(curr != NULL){
        forward = curr->next;
        curr->next = prev;
        prev = curr;
        curr = forward;
        
    }
    return prev;
    */
    
}